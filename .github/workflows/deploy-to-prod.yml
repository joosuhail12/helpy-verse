
name: Deploy to VM

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Update version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          PATCH=$((VERSION_PARTS[2] + 1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          npm version $NEW_VERSION --no-git-tag-version

      - name: Build project
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > .env
          npm run build

      - name: Copy package.json and server files to dist
        run: |
          cp package.json dist/
          echo 'const express = require("express");
          const path = require("path");
          const app = express();
          const PORT = process.env.PORT || 3000;
          
          app.use(express.static(path.join(__dirname)));
          
          app.get("*", (req, res) => {
            res.sendFile(path.join(__dirname, "index.html"));
          });
          
          app.listen(PORT, () => {
            console.log(`Server is running on port ${PORT}`);
          });' > dist/server.js

      - name: Create PM2 config
        run: |
          echo '{
            "apps": [{
              "name": "pullse-frontend",
              "script": "server.js",
              "instances": 1,
              "autorestart": true,
              "watch": false,
              "time": true,
              "env": {
                "PORT": 3000,
                "NODE_ENV": "production"
              }
            }]
          }' > dist/ecosystem.config.json

      - name: Rename dist folder
        run: mv dist pullse_frontend_lovable_new

      - name: Zip the folder for faster transfer
        run: zip -r pullse_frontend_lovable_new.zip pullse_frontend_lovable_new

      - name: Set up SSH keys
        run: |
          echo "${{ secrets.VM_PEM }}" > pullse-development-server-1.pem
          chmod 600 pullse-development-server-1.pem

      - name: Define variables
        run: |
          echo "VM_USERNAME=${{ secrets.VM_USERNAME }}" >> $GITHUB_ENV
          echo "VM_IP=${{ secrets.VM_IP }}" >> $GITHUB_ENV

      - name: SCP the zip file to VM
        run: |
          mkdir -p ~/.ssh
          echo -e "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null" > ~/.ssh/config
          scp -v -i pullse-development-server-1.pem pullse_frontend_lovable_new.zip pullse@$VM_IP:/home/pullse/

      - name: SSH into VM and deploy
        run: |
          ssh -i pullse-development-server-1.pem pullse@$VM_IP << 'EOF'
          set -e

          # Install required packages if not present
          if ! command -v npm &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi

          if [ -f "pullse_frontend_lovable_new.zip" ]; then
            echo "Unzipping the new frontend..."
            unzip -o /home/pullse/pullse_frontend_lovable_new.zip
          else
            echo "ERROR: pullse_frontend_lovable_new.zip not found!"
            exit 1
          fi

          cd pullse_frontend_lovable_new
          npm install express
          
          if [ -d "/home/pullse/pullse_frontend_lovable" ]; then
            echo "Stopping existing PM2 process..."
            pm2 stop pullse-frontend || true
            pm2 delete pullse-frontend || true
            
            echo "Moving old frontend to backup..."
            VERSION=$(jq -r .version package.json || echo "unknown_version")
            mv /home/pullse/pullse_frontend_lovable "/home/pullse/pullse_frontend_lovable_$VERSION"
          fi

          echo "Moving new frontend into place..."
          mv /home/pullse/pullse_frontend_lovable_new /home/pullse/pullse_frontend_lovable

          cd /home/pullse/pullse_frontend_lovable

          echo "Starting PM2 process..."
          pm2 start ecosystem.config.json

          # Clean up zip file
          rm -f /home/pullse/pullse_frontend_lovable_new.zip
          EOF

      - name: Cleanup SSH Key
        run: rm -f pullse-development-server-1.pem

